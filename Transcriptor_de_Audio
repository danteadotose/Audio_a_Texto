{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# [**Whisper:** ](https://github.com/openai/whisper):\n",
        "\n",
        "\n",
        "Whisper is a general-purpose speech recognition model. It is trained on a large dataset of diverse audio and is also a multi-task model that can perform multilingual speech recognition as well as speech translation and language identification."
      ],
      "metadata": {
        "id": "ebaWPaZsWaXv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Convierte audio en español a texto con Whisper\n",
        "\n",
        "1. Haz click en cada uno de los simbolos de play que aparecen cuando pasas el cursos por un bloque. \n",
        "\n",
        "2. Tienes que picarlos en orden decendente. Si todo salió bien, aparece una palomita verda a la izquierda. "
      ],
      "metadata": {
        "id": "HRDnLDhUTp4X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pip install git+https://github.com/openai/whisper.git --quiet"
      ],
      "metadata": {
        "id": "d4jZLv6qPtTR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import whisper\n",
        "\n",
        "model = whisper.load_model(\"large\")"
      ],
      "metadata": {
        "id": "e9NJKYZCQ-0R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Primero tienes subir el archiivo de audio a esta plataforma: \n",
        "1. Dale click al icono de la carpeta en la barra de la izquierda\n",
        "2. Se despliega una barra latera, dale click al icono del archivo que tiene una flecha\n",
        "3. Selecciona el audio que quieres transcribir. El archivo **NO** puede ser un video. \n"
      ],
      "metadata": {
        "id": "nSBIpPKWT37X"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Escribe dentro de las comillas de abajo el nombre del archivo que acabas de importar. \n",
        "\n",
        "**Ejemplo:** model.transcribe(\"mi_audio.mp3\")"
      ],
      "metadata": {
        "id": "k6A_zqlZUq5v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "result = model.transcribe(\" \") # <- Dentro de estas comillas va el nombre del tu archivo de audio "
      ],
      "metadata": {
        "id": "LjQ1-KC-VNW6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Cuando le des play a al bloque de abajo se va a desplegar la trascripción del texto. \n",
        "\n",
        "Para copiar todo:\n",
        "1. Pica el bloque con texto que se desplegó\n",
        "2. selecciona todo el texto con ctrl+a y después copialo con ctrl+c\n",
        "3. Abre un documento de word y pega el texto con ctrl+v "
      ],
      "metadata": {
        "id": "KunwGVa9U2Vk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "parrafos = result[\"text\"].replace('. ','. \\n')\n",
        "parrafos = parrafos.split('. \\n')\n",
        "for parrafo in parrafos:\n",
        "  if '?' in parrafo:\n",
        "    print('- ',end = '')\n",
        "    print(parrafo)\n",
        "  else:\n",
        "    print('+ ',end = '')\n",
        "    print(parrafo)  "
      ],
      "metadata": {
        "id": "wJxrExj_Ky2r"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Las preguntas aparecen marcadas con --\n",
        "- Todo lo demás aparece con +"
      ],
      "metadata": {
        "id": "rHXLWdgoXDc1"
      }
    }
  ]
}
